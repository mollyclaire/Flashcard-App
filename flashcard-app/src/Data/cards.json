{
    "cards": [
        {
            "id": 1,
            "question": "What is a callback?",
            "answer": "A callback is a function that gets passed into another function as an argument where it is executed when the parent function wants it to be executed. Callbacks are essential to async programming, because they tell a function what to do once it's done with a task."
        
        },
        {
            "id": 2,
            "question": "What is asyncronous JavaScript?",
            "answer": "Step two will be performed even if step one isn't finished. Async programming basically allows other operations to continue before one operation has completed (aka, retrieving data from a database)."
        
        },
        {
            "id": 3,
            "question": "What is an API?",
            "answer": "Application Programming Interface. An API allows applications to communicate with one another."
        
        },
        {
            "id": 4,
            "question": "Explain client-server relationship.",
            "answer": "The client (or browser) makes a request, and the request is received by the server. The server may have to get something from a database, but basically it returns the user back with some sort of information/resource."
        
        },
        {
            "id": 5,
            "question": "What are some popular jQuery methods?",
            "answer": ".attr | .addClass | .val | .prop | .text | .append | .html | .click(function()... "
        
        },
        {
            "id": 6,
            "question": "What is document.ready()?",
            "answer": "This method offers a way to run JavaScript code after the DOM is fully loaded and safe to manipulate. All jQuery events/functions should occur at this point."
        
        },
        {
            "id": 7,
            "question": "What is the difference between library and framework?",
            "answer": "Frameworks dictate the structure of a project, while libraries can be used throughout as building blocks. Popular frameworks are Ruby on Rails, Django, Angular, Express. Popular libraries include React, Axios, and jQuery."
        
        },
        {
            "id": 8,
            "question": "What is Agile?",
            "answer": "Agile is an approach/mindset. It is iterative, meaning that it's done in pieces (sprints). Each sprint builds and improves off lessons from previous sprints. Scrum is a workflow framework made up of sprints and reviews used to promote Agile project management."
        
        },
        {
            "id": 9,
            "question": "What is an object?",
            "answer": "All JavaScript values, except primitives (string, undefined, null, Boolean, number) are objects. Objects are technically varibales, but they can contain many values. Basically, objects are just collections of named values."
        
        },
        {
            "id": 10,
            "question": "What is a function?",
            "answer": "A block of reusable code that performs a single action."
        
        },
        {
            "id": 11,
            "question": "Explain object-oriented programming.",
            "answer": "OOP groups related variables and functions that operate on them into objects (encapsulation)."
        
        },
        {
            "id": 12,
            "question": "What is a CDN?",
            "answer": "Content Delivery Network. CDNs put web content closer to the user, which means faster load times. A website is hosted in a data center. With CDN, one has access to a global network of servers that host content physically closer to visitors."
        
        },
        {
            "id": 13,
            "question": "What does every class component (React) need?",
            "answer": "A class component needs at least one method -- the render method. Code that determines the display logic (what exact is going to show up on the page or what the style will be) should go right after the render method and before the return."
        
        },
        {
            "id": 14,
            "question": "What is important to remember when passing props through a class component (React)?",
            "answer": "Use 'this.props'"
        
        },
        {
            "id": 15,
            "question": "What is state (React)?",
            "answer": "State is the data that a component maintains. This is distinct from props, which cannot be changed by the component receiving the props. Props are immutable or unchangeable. State must be a part of a class component (not functional). State will always be an object."
        
        },
        {
            "id": 16,
            "question": "How do you write a ternary operator?",
            "answer": "condition ? statement if true : statement if false"
        },
        {
            "id": 17,
            "question": "What is a RESTful API?",
            "answer": "REST is an acronym for Representational State Transfer. The six constraints that define it are: uniform interface, stateless, cacheable, client-server, layered system. RESTful applications use HTTP requests to perform four operations termed as CRUD (C: create, R: read, U: update, and D: delete). Create and/or update is used to post data, get for reading/listing data, and delete to remove data."
        },
        {
            "id": 18,
            "question": "What is SaaS",
            "answer": "SaaS stands for 'Software as a Service', and it's basically a means of describing a service offered to businesses in which software is distributed remotely from one business, or 'service provider' to another business. The software is delivered over the internet directly to the users - and the company simply pays their bill at the end of the month. Similar to how a phone bill comes to your home each month, companies pay for services that help them keep track of all their customer records, accounting, service calls, and more."
        },
        {
            "id": 19,
            "question": "What is the DOM?",
            "answer": "The DOM (Document Object Model) is an interface that represents how your HTML and XML documents are read by the browser. It allows a language (JavaScript) to manipulate, structure, and style your website. After the browser reads your HTML document, it creates a representational tree called the Document Object Model and defines how that tree can be accessed."
        },
        {
            "id": 20,
            "question": "What is a promise?",
            "answer": "With a promise, instead of bundling all dependencies into one code block and sending the entire thing off to the browser, weâ€™re able to separate them out. We can send an asynchronous callback to the browser and use .then() to hold all other dependencies aside."
        },
        {
            "id": 21,
            "question": "What is Webpack?",
            "answer": "Webpack is a static module bundler. It was created to help reduce the overall size of an application and also help browers interpret code."
        },
        {
            "id": 22,
            "question": "What is TypeScript?",
            "answer": "TypeScript is basically a superset of JavaScript (created by Microsoft)."
        }
    ]
}